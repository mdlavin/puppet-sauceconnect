start on (started local-filesystem and started network-services and started syslog)
stop on (stopping local-filesystem or stopping network-services or stopping syslog)

description 'Starts Sauce Connect, that creates a tunnel with SauceLabs, so all tests done with Sauce OnDemand with this same user, use the tunnel.'

respawn

script
  NAME="sauce-connect"
  [ -r /etc/default/$NAME ] && . /etc/default/$NAME

  READY_FILE=$LOG_DIR/ready_file
  [ -f "${READY_FILE}" ] && rm -f ${READY_FILE}

  DAEMON="$SAUCE_CONNECT"
  DAEMON_ARGS="--logfile $LOG_FILE --readyfile $READY_FILE -u $API_USER -k $API_KEY"
  [ -n "$TUNNEL_IDENTIFIER" ] && DAEMON_ARGS="$DAEMON_ARGS --tunnel-identifier=$TUNNEL_IDENTIFIER"

  if command -v start-stop-daemon >/dev/null 2>&1; then
    CUSER=""
    [ -n "$USERNAME" ] && [ -n "$GROUP"] && CUSER="-c $USERNAME:$GROUP"
    start-stop-daemon -m --chdir $LOG_DIR $CUSER --start --quiet --exec $DAEMON -- $DAEMON_ARGS
  else
    # If start-stop-daemon doesn't exist then this is probably a RedHat machine so don't
    # use the start-stop-daemon helper
    DAEMON_USER=""
    [ -n "$USERNAME" ] && DAEMON_USER="--user $USERNAME"
    DAEMON_GROUP=""
    [ -n "$GROUP" ] && DAEMON_GROUP="--group $GROUP"
    sudo $DAEMON_USER $DAEMON_GROUP $DAEMON $DAEMON_ARGS
  fi
end script

post-start script
  NAME="sauce-connect"
  [ -r /etc/default/$NAME ] && . /etc/default/$NAME

  READY_FILE=$LOG_DIR/ready_file

  # Wait for the tunnel to be ready, but time out with error after MAX_WAIT seconds
  MAX_WAIT=180
  WAIT_INTERVAL=3
  MAX_TRIES=$((MAX_WAIT / WAIT_INTERVAL))
  echo -n "Waiting for tunnel"
  TRIES=$MAX_TRIES
  while [ ! -f "${READY_FILE}" ]; do
     sleep $WAIT_INTERVAL
     TRIES=$((TRIES - 1))
     [ $TRIES -gt 0 ] || return 2
     echo -n "."
  done
  echo " ready."

end script
